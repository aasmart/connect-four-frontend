:root {
  --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
  'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
  'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;

  --background-color: #FEFEFE;
  --foreground-color: black;
  --on-background-color: #EFEFEF;
  --input-color: #DDDDDD;
  --accent-color: #e7bf26;
  --danger-color: #ce2727;
  --secondary-color: #252FE8;
}

@media (prefers-color-scheme: dark) {
  :root {
      --background-color: #333333;
      --on-background-color: #222222;
      --input-color: #777777;
      --foreground-color: white;
  }

  .gameTile:not(.canPlace, .red, .yellow)::after {
      filter: brightness(30%);
  }

  .gameTile.canPlace:hover::after {
      filter: brightness(130%);
  }

  html {
      color-scheme: dark;
  }
}

@media (prefers-reduced-motion) {
  .fall {
      animation: none;
  }

  .loading-bar span {
      animation-duration: 7.5s;
  }

  .copy-button::after,
  .copy-button::before {
      transition: none;
  }

  .basic-button::after {
      transition: none;
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  background-color: var(--background-color);
  width: 100%;
  height: 100%;
}

a {
  color: inherit;
  text-decoration: none;
}

h1 {
  font-size: 2.5em;
  padding: 0.25rem;
}

h1 + hr {
  width: 100%;
  color: var(--accent-color);
  background-color: var(--accent-color);
  border: 2px solid var(--accent-color);
  border-radius: 5px;
}

main {
  align-items: center;
  padding: 1rem;
  min-height: 100dvh;
  min-width: 100%;

  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 1rem;
}

.game-form {
  /*border: 2px solid #555555;*/
  box-shadow: 0 2px 10px black;
  border-radius: 16px;
  padding: 36px;
  background-color: var(--on-background-color);

  width: clamp(300px, 40%, 500px);
  height: auto;

  display: flex;
  flex-direction: column;
  gap: 2.5rem;
}

.game-form > form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
}

.game-form form h3 {
  padding: 4px;

  font-size: 1.5rem;
  width: 100%;
  text-align: center;
  border-bottom: 2px solid #999999;
}

label {
  display: flex;
  flex-direction: column;
  font-size: 1.25rem;
  width: 100%;
}

.basic-button {
  padding: 16px;
  width: 100%;
  position: relative;
  isolation: isolate;
  overflow: hidden;

  font-size: 1.25rem;
  border: 2px solid #555555;
  border-radius: 8px;
  background-color: var(--on-background-color);
  box-shadow: 0 2px 4px black;
}

.basic-button::after {
  content: '';
  position: absolute;
  border-radius: 50%;
  width: 100%;
  aspect-ratio: 1;
  inset: 0;
  margin: auto;
  z-index: -1;

  background-color: var(--accent-color);
  scale: 0;

  transition: scale 300ms;
}

.basic-button[data-action="normal"]::after {
  background-color: var(--accent-color);
}

.basic-button[data-action="destructive"]::after {
  background-color: var(--danger-color);
}

.basic-button:not(:disabled) {
  cursor: pointer;
}

.basic-button:not(:disabled):hover::after,
.basic-button:not(:disabled):focus-visible::after {
  scale: 1.2;
}

input {
  padding: 4px;
  width: 100%;
  position: relative;

  font-size: 1.35rem;
  border: 2px solid #555555;
  border-radius: 8px;
  background-color: var(--input-color);
  box-shadow: 0 2px 4px black;
}

.gameBoard {
  --size: clamp(50px, min(10dvw, 10dvh), 150px);
  --rows: 6;
  --columns: 7;

  display: grid;
  grid: repeat(var(--rows), var(--size)) / repeat(var(--columns), var(--size));

  border: none;
  box-shadow: 0 2px 10px black;
  border-radius: 16px;
  padding: 6px;
  background-color: var(--on-background-color);
}

.gameTile {
  position: relative;

  height: 100%;
  width: 100%;
  margin: auto;
  z-index: 1;

  border: none;
  background-color: transparent;
}

.gameTile::before {
  content: '';
  inset: 10%;
  position: absolute;
  background-color: var(--background-color);
  border-radius: 50%;
  z-index: -2;

  transition: filter 250ms;
}

.gameTile::after {
  content: '';
  inset: 10%;
  position: absolute;
  background-color: var(--background-color);
  border-radius: 50%;
  z-index: 2;

  transition: filter 250ms;
}

.gameTile:not(.canPlace, .red, .yellow)::after {
  filter: brightness(80%);
}

.gameTile.canPlace {
  cursor: pointer;
}

.gameTile.red::after {
  background-color: red;
}

.gameTile.yellow::after {
  background-color: gold;
}

.gameTile.canPlace:hover::after {
  filter: brightness(90%);
}

.fall::after {
  animation: fall 500ms ease-in forwards, fade-in 100ms ease-in forwards;
}

.fallFar::after {
  animation: fall-far 1000ms ease-in forwards;
}

@keyframes fade-in {
  from {
      opacity: 0;
  }

  to {
      opacity: 1;
  }
}

@keyframes fall {
  from {
      transform: translateY(-800%);
  }

  to {
      transform: translateY(0);
  }
}

@keyframes fall-far {
  from {
      transform: translateY(0);
  }

  to {
      transform: translateY(100dvh);
  }
}

.game-buttons {
  width: 100%;
}

.game-buttons > button {
  min-width: 12rem;
  max-width: 24rem;
  width: 100%;
}

#popup[open] {
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  min-width: 20rem;
  width: 25%;
  max-width: 35rem;
  height: 25%;
  min-height: 20rem;
  isolation: isolate;
  z-index: 99;

  box-shadow: 0 0 20px black;
  border-radius: 0.5rem;
  border: none;
  outline: none;
}

#popup[open] form {
  width: 100%;
  height: 100%;

  background: var(--on-background-color);
  padding: 1rem;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

#popup-body {
  font-size: 1.5rem;
  z-index: 99;
  flex: 10;
  display: grid;
  place-items: center;
}

#popup-body p {
  text-align: center;
  white-space: break-spaces;
}

#popup-buttons {
  width: 100%;
}

#popup-buttons > button {
  min-width: 14rem;
}

#popup-buttons > * {
  flex: 1;
}

#popup .loading-bar {
  flex: 1;
  justify-self: flex-end;
}

.copy-button {
  --popup-offset: -3rem;

  font-weight: bold;
  font-size: 1.25rem;
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  border-radius: 8px;
  border: none;
  background-color: var(--background-color);

  display: inline-flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 0.35rem;
  position: relative;
  isolation: isolate;

  transition: color 250ms;
}

.copy-button[data-can-copy="false"] {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
  cursor: text;
}

.copy-button svg {
  fill: var(--foreground-color);
  transition: fill 250ms;
}

.copy-button[data-can-copy="true"]:hover,
.copy-button[data-can-copy="true"]:focus-visible {
  color: var(--accent-color);
}

.copy-button[data-can-copy="true"]:hover svg,
.copy-button[data-can-copy="true"]:focus-visible svg {
  fill: var(--accent-color);
}

.copy-button::after,
.copy-button::before {
  --offset: -2rem;

  z-index: -1;
  position: absolute;
  margin: auto;
  opacity: 0;

  background-color: var(--secondary-color);

  transition: opacity 250ms, translate 250ms;
}

.copy-button::after {
  content: 'Copied';
  padding: 0.35rem;
  translate: 0 calc(var(--offset));

  border-radius: 8px;
  color: white;
}

.copy-button::before {
  content: '';
  inset: 0;
  translate: 0 calc(50% + var(--offset));
  clip-path: polygon(50% 100%, 25% 0, 75% 0);
}

.copy-button[data-copied="true"]::after,
.copy-button[data-copied="true"]::before {
  opacity: 1;
  --offset: var(--popup-offset)
}

.loading-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1rem;
}

.loading-bar span {
  --size: 2rem;
  --color: black;
  --animation-delay: 0ms;

  width: var(--size);
  height: var(--size);
  display: inline-block;

  border-radius: 50%;
  background: var(--color);
  opacity: 0;
  translate: 0 -100%;
  scale: 0.5;
}

.loading-bar span {
  animation: loading 2000ms var(--animation-delay) ease-in-out infinite;
}

@keyframes loading {
  0% {
      opacity: 0;
      translate: 0 -50%;
      scale: 0.5;
  }

  15% {
      opacity: 0;
      translate: 0 -50%;
      scale: 0.5;
  }

  33% {
      opacity: 1;
      translate: 0 0;
      scale: 1;
  }

  66% {
      opacity: 1;
      translate: 0;
      scale: 1;
  }

  85% {
      opacity: 0;
      translate: 0 50%;
      scale: 0.5;
  }

  100% {
      opacity: 0;
      translate: 0 50%;
      scale: 0.5;
  }
}

input::placeholder {
  opacity: 0.5;
  transition: opacity 250ms;
}

input:focus::placeholder {
  opacity: 0.2;
}

input[aria-invalid] {
  border: 2px solid var(--danger-color);
}

input + strong {
  color: var(--danger-color);
  font-weight: normal;
}

.flex {
  --gap: 0;

  display: flex;
  gap: var(--gap);
}

.row {
  flex-direction: row;
  flex-wrap: wrap;
}

.column {
  flex-direction: column;
}

.centered {
  align-items: center;
  justify-content: center;
}